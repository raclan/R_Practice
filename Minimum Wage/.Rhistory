knitr::opts_chunk$set(echo = TRUE)
library(readr)
Objective <- read_csv("Objective.csv")
Subjective <- read_csv("Subjective.csv")
merge(Objective, Subjective, by="PID")
merged <- merge(Objective, Subjective, by="PID")
summary(merged)
show(merged)
View(merged)
```{r merge}
```{r wide}
```{r merge}
# install.packages("tidyverse")
# install.packages("Rtools")
```{r import}
Objective <- read_csv("Objective.csv")
merged <- merge(Objective, Subjective, by="PID")
show(merged)
reshape(merged, idvar = "PID", direction = "wide")
reshape(merged, idvar = "PID", timevar="Usage,DailyHourlyAverage", direction = "wide")
reshape(merged, idvar = "PID", timevar="Usage.DailyHourlyAverage", direction = "wide")
reshape(merged, idvar = "PID", timevar="Usage.DailyHourlyAverage", direction = "wide")
reshape(data=merged, idvar = "PID", timevar="Stage.x", direction = "wide")
merged <- merge(Objective, Subjective, by="PID")
merged <- merged[ ,c("Stage.x","OwnPhone.x","Phone.OS.x")]
show(merged)
merged <- merge(Objective, Subjective, by="PID")
merged <- merged[ ,c("PID","Stage.x","OwnPhone.x","Phone.OS.x","Usage.DailyHourlyAverage")]
show(merged)
merged <- merge(Objective, Subjective, by="PID")
# merged <- merged[ ,c("PID","Stage.x","OwnPhone.x","Phone.OS.x","Usage.DailyHourlyAverage")]
show(merged)
merged <- merge(Objective, Subjective, by="PID")
merged <- merged[ ,c("PID","Stage.x","OwnPhone.x","Phone.OS.x","Usage.DailyHourlyAverage")]
show(merged)
merged <- merge(Objective, Subjective, by="PID")
show(merged)
test <- spread(Subjective, Platform, TimeOnApp)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
# install.packages("tidyverse")
# install.packages("Rtools")
library(tidyr)
test <- spread(Subjective, Platform, TimeOnApp)
merged <- merge(Objective, Subjective, by="PID")
show(merged)
show(test)
test <- Subjective[,c("PID","Platform","TimeOnApp")] %>% spread(Platform, TimeOnApp)
show(test)
#merged <- merge(Objective, Subjective, by="PID")
#show(merged)
show(temp2)
temp2 <- Objective[,c("PID","Usage.DailyHourlyAverage")]
show(temp2)
merged <- merge(temp, temp2, by="PID")
temp <- Subjective[,c("PID","Platform","TimeOnApp")] %>% spread(Platform, TimeOnApp)
#show(temp)
temp2 <- Objective[,c("PID","Usage.DailyHourlyAverage")]
#show(temp2)
merged <- merge(temp, temp2, by="PID")
show(merged)
View(test)
# install.packages("tidyverse")
# install.packages("Rtools")
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
# install.packages("tidyverse")
# install.packages("Rtools")
library(tidyverse)
#show(temp)
temp2 <- Objective[,c("PID","Usage.DailyHourlyAverage")] %>% unique()
show(temp2)
temp <- Subjective[,c("PID","Platform","TimeOnApp")] %>% spread(Platform, TimeOnApp)
# show(temp)
temp2 <- Objective[,c("PID","Usage.DailyHourlyAverage")] %>% unique()
# show(temp2)
merged <- merge(temp, temp2, by="PID")
show(merged)
temp <- Subjective[,c("PID","Platform","TimeOnApp")] %>% spread(Platform, TimeOnApp)
# show(temp)
temp2 <- Objective[,c("PID","Usage.DailyHourlyAverage")] %>% unique()
# show(temp2)
merged <- merge(temp2, temp, by="PID")
show(merged)
df <- Subjective[,c("PID","Platform","TimeOnApp")] %>% spread(Platform, TimeOnApp)
# show(df)
df2 <- Objective[,c("PID","Usage.DailyHourlyAverage")] %>% unique()
# show(df2)
merged <- merge(df2, df, by="PID")
show(merged)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
# install.packages("tidyverse")
# install.packages("Rtools")
library(tidyverse)
Objective <- read_csv("Objective.csv")
Subjective <- read_csv("Subjective.csv")
df <- Subjective[,c("PID","Platform","TimeOnApp")] %>% spread(Platform, TimeOnApp)
# show(df)
df2 <- Objective[,c("PID","Usage.DailyHourlyAverage")] %>% unique()
# show(df2)
merged <- merge(df2, df, by="PID")
show(merged)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
# install.packages("tidyverse")
# install.packages("Rtools")
library(tidyverse)
ggplot(merged)
ggplot(merged)
ggplot(data = merged, aes(x = Usage.DailyHourlyAverage, y = Instagram)) +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(readr)
# install.packages("tidyverse")
# install.packages("Rtools")
library(tidyverse)
library(ggplot2)
Objective <- read_csv("Objective.csv")
Subjective <- read_csv("Subjective.csv")
import ggplot2
library(ggplot2)
mpg
# displ: car's engine size in liters
# hwy: car's fuel efficiency on the highway, in miles per gallon
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggplot2)
library(maps)
install.packages("maps")
library(maps)
# install.packages("maps")
library(maps)
library(viridis)
library(zipcodeR)
install.packages("zipcodeR")
install.packages("zipcodeR")
install.packages("maps")
install.packages("viridis")
install.packages("maps")
library(maps)
library(viridis)
library(zipcodeR)
# install.packages("maps")
install.packages("viridis")
install.packages("viridis")
# install.packages("maps")
install.packages("viridis")
# install.packages("maps")
# install.packages("viridis")
install.packages("zipcodeR")
library(zipcodeR)
# install.packages("maps")
# install.packages("viridis")
# install.packages("zipcodeR")
library(maps)
library(viridis)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggplot2)
library(maps)
# library(viridis)
# library(zipcodeR)
data_dir <- 'https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/us_state_vaccinations.csv?raw=true'
covid_raw <- read_csv(data_dir, show_col_types=FALSE)
View(df)
glimpse(covid_raw)
today_covid_all <- covid_raw %>%
filter(data == '2022-06-05') %>%
# select(location, people_fully_vaccinated_per_hundred) %>%
mutate(location = tolower(location)) %>%
rename(region = location) %>%
mutate(region = plyr::revalue(region, c("new york state" = "new york")))
today_covid_all <- covid_raw %>%
filter(date == '2022-06-05') %>%
select(location, people_fully_vaccinated_per_hundred) %>%
mutate(location = tolower(location)) %>%
rename(region = location) %>%
mutate(region = plyr::revalue(region, c("new york state" = "new york")))
today_covid_all <- covid_raw %>%
filter(date == '2022-06-05') %>%
select(location, people_fully_vaccinated_per_hundred) %>%
mutate(location = tolower(location)) %>%
rename(region = location) %>%
mutate(region = dplyr::revalue(region, c("new york state" = "new york")))
today_covid_all <- covid_raw %>%
filter(date == '2022-06-05') %>%
select(location, people_fully_vaccinated_per_hundred) %>%
mutate(location = tolower(location)) %>%
rename(region = location) %>%
mutate(region = plyr::revalue(region, c("new york state" = "new york")))
library(maps)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggplot2)
library(maps)
# library(viridis)
# library(zipcodeR)
data_dir <- 'https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/us_state_vaccinations.csv?raw=true'
covid_raw <- read_csv(data_dir, show_col_types=FALSE)
glimpse(covid_raw)
today_covid_all <- covid_raw %>%
filter(date == '2022-06-05') %>%
select(location, people_fully_vaccinated_per_hundred) %>%
mutate(location = tolower(location)) %>%
rename(region = location) %>%
mutate(region = plyr::revalue(region, c("new york state" = "new york")))
library(plyr)
install.packages("plyr")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggplot2)
library(maps)
install.packages("plyr")
# library(viridis)
# library(zipcodeR)
today_covid_all <- covid_raw %>%
filter(date == '2022-06-05') %>%
select(location, people_fully_vaccinated_per_hundred) %>%
mutate(location = tolower(location)) %>%
rename(region = location) %>%
mutate(region = plyr::revalue(region, c("new york state" = "new york")))
us <- map_data(state)
today_covid_map_all <- merge(us_map, today_covid_map_all, by = "region")
us_map <- map_data("state")
today_covid_map_all <- merge(us_map, today_covid_map_all, by = "region")
today_covid_map_all <- merge(us_map, today_covid_all, by = "region")
view(today_covid_map_all)
ggplot(data = today_covid_map_all, aes(x = long, y = lat))
ggplot(data = today_covid_map_all, aes(x = long, y = lat)) +
geom_map(data = today_covid_map_all, map = us_map, aes(fill = people_fully_vaccinated_per_hundred, map_id = region))
ggplot(data = today_covid_map_all, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = people_fully_vaccinated_per_hundred, map_id = region))
ggplot(data = today_covid_map_all, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = people_fully_vaccinated_per_hundred, map_id = region)) +
scale_fill_viridis(name = "total boosters per 100 population", option = "D", direction = -1)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggplot2)
library(maps)
install.packages("plyr")
library(viridis)
library(zipcodeR)
ggplot(data = today_covid_map_all, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = people_fully_vaccinated_per_hundred, map_id = region)) +
scale_fill_viridis(name = "fully vaccinated per 100", option = "D", direction = -1) +
theme_void()
install.packages("plyr")
labs(title = "State-by-state Vaccination Across the US", subtitle = "Data from the Centers for Disease Control (June 5th, 2022") +
theme(text = element_text(size = 10), legend.title = element_text(size = 9)) + theme_void()
labs(title = "State-by-state Vaccination Across the US", subtitle = "Data from the Centers for Disease Control (June 5th, 2022") +
theme(text = element_text(size = 10), legend.title = element_text(size = 9)) + theme_void()
labs(title = "State-by-state Vaccination Across the US", subtitle = "Data from the Centers for Disease Control (June 5th, 2022") +
theme(text = element_text(size = 10), legend.title = element_text(size = 9))
labs(title = "State-by-state Vaccination Across the US", subtitle = "Data from the Centers for Disease Control (June 5th, 2022") +
theme(text = element_text(size = 10), legend.title = element_text(size = 9)) +
theme_void()
ggplot(data = today_covid_map_all, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = people_fully_vaccinated_per_hundred, map_id = region)) +
scale_fill_viridis(name = "fully vaccinated per 100", option = "D", direction = -1) +
theme_void()
labs(title = "State-by-state Vaccination Across the US", subtitle = "Data from the Centers for Disease Control (June 5th, 2022") +
theme(text = element_text(size = 10), legend.title = element_text(size = 9)) +
theme_void()
labs(title = "State-by-state Vaccination Across the US", subtitle = "Data from the Centers for Disease Control (June 5th, 2022)") +
theme(text = element_text(size = 10), legend.title = element_text(size = 9)) +
theme_void()
ggplot(data = today_covid_map_all, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = people_fully_vaccinated_per_hundred, map_id = region)) +
scale_fill_viridis(name = "fully vaccinated per 100", option = "D", direction = -1) +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
# to change graph aesthetic, put outside of parentheses; to tie it to variable, put inside
# ?geom_line
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
?geom_smooth
library(maps)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggplot2)
library(maps)
data()
summary(Titanic)
glimpse(Titanic)
show(Titanic)
showdir()
dir()
cwd()
wd()
cwd
dir()
cwd()
gwd()
getwd()
cd()
setdir()
setwd("C:/Users/ryanr/Documents/School Stuff/CAB/R Practice/Practice")
getwd()
min_wage <- read_csv("Minimum Wage Data")
min_wage <- read_csv("Minimum Wage Data.csv")
show(min_wage)
View(min_wage)
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
View(min_wage_2020)
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != "District of Columbia")
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != "District of Columbia", "Guam")
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != "District of Columbia" & State != "Guam")
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != ("District of Columbia", "Guam"))
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != c("District of Columbia", "Guam"))
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != c("District of Columbia", "Guam", "Puerto Rico", "U.S. Virgin Islands"))
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != c("District of Columbia", "Guam", "Puerto Rico", "U.S. Virgin Islands"))
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
View(min_wage_2020)
"District of Columbia",
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != c("Guam", "Puerto Rico", "U.S. Virgin Islands"))
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
View(min_wage_2020)
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != c("Guam", "Puerto Rico", "U.S. Virgin Islands"))
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != "District of Columbia", State != "Guam", State != "Puerto Rico", State != "U.S. Virgin Islands")
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != "District of Columbia", State != "Guam", State != "Puerto Rico", State != "U.S. Virgin Islands") %>%
rename(region = State)
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
today_covid_map_all <- merge(us_map, min_wage_2020, by = "region")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggplot2)
library(maps)
setwd("C:/Users/ryanr/Documents/School Stuff/CAB/R Practice/Practice")
getwd()
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != "District of Columbia", State != "Guam", State != "Puerto Rico", State != "U.S. Virgin Islands") %>%
rename(region = State)
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
us_map <- map_data("state")
today_covid_map_all <- merge(us_map, min_wage_2020, by = "region")
min_wage_2020_map <- merge(us_map, min_wage_2020, by = "region")
ggplot(data = min_wage_2020_map, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = Effective.Minimum.Wage, map_id = region)) +
scale_fill_viridis(name = "Effective Minimum Wage", option = "D", direction = -1) +
theme_void()
library(viridis)
ggplot(data = min_wage_2020_map, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = Effective.Minimum.Wage, map_id = region)) +
scale_fill_viridis(name = "Effective Minimum Wage", option = "D", direction = -1) +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggplot2)
library(maps)
install.packages("plyr")
library(viridis)
library(zipcodeR)
install.packages("plyr")
ggplot(data = today_covid_map_all, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = people_fully_vaccinated_per_hundred, map_id = region)) +
scale_fill_viridis(name = "fully vaccinated per 100", option = "D", direction = -1) +
theme_void()
ggplot(data = min_wage_2020_map, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = Effective.Minimum.Wage, map_id = region)) +
scale_fill_viridis(name = "Effective Minimum Wage", option = "D", direction = -1) +
theme_void()
?scale_fill_viridis
ggplot(data = min_wage_2020_map, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = Effective.Minimum.Wage, map_id = region)) +
scale_fill_viridis(name = "Effective Minimum Wage", option = "D", direction = -1)
ggplot(data = min_wage_2020_map, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = Effective.Minimum.Wage, map_id = region)) +
scale_fill_viridis(name = "Effective Minimum Wage", option = "D", direction = -1) + theme_void()
ggplot(data = min_wage_2020_map, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = Effective.Minimum.Wage, map_id = region)) +
scale_fill_viridis(name = "Effective Minimum Wage", option = "D", direction = -1) +
theme_void()
ggplot(data = min_wage_2020_map, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = Effective.Minimum.Wage, map_id = region)) +
scale_fill_viridis(option = "D", direction = -1) +
theme_void()
min_wage_2020_map <- merge(us_map, min_wage_2020, by = "region")
View(min_wage_2020_map)
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != "District of Columbia", State != "Guam", State != "Puerto Rico", State != "U.S. Virgin Islands") %>%
rename(region = State)
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
View(us_map)
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != "District of Columbia", State != "Guam", State != "Puerto Rico", State != "U.S. Virgin Islands") %>%
rename(region = State) %>%
mutate(region = toLower(region))
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != "District of Columbia", State != "Guam", State != "Puerto Rico", State != "U.S. Virgin Islands") %>%
rename(region = State) %>%
mutate(region = toLower(region))
View(min_wage)
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != "District of Columbia", State != "Guam", State != "Puerto Rico", State != "U.S. Virgin Islands") %>%
mutate(State = toLower(State))
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != "District of Columbia", State != "Guam", State != "Puerto Rico", State != "U.S. Virgin Islands") %>%
mutate(State = toLower(State))
min_wage <- read_csv("Minimum Wage Data.csv")
min_wage <- min_wage %>%
filter(State != "District of Columbia", State != "Guam", State != "Puerto Rico", State != "U.S. Virgin Islands") %>%
mutate(State = toLower(State))
?tolower
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != "District of Columbia", State != "Guam", State != "Puerto Rico", State != "U.S. Virgin Islands") %>%
mutate(State = tolower(State))
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
min_wage <- read_csv("Minimum Wage Data.csv") %>%
filter(State != "District of Columbia", State != "Guam", State != "Puerto Rico", State != "U.S. Virgin Islands") %>%
mutate(State = tolower(State)) %>%
rename(region = State)
min_wage_2020 <- min_wage %>%
filter(Year == 2020)
min_wage_2020_map <- merge(us_map, min_wage_2020, by = "region")
View(min_wage_2020_map)
ggplot(data = min_wage_2020_map, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = Effective.Minimum.Wage, map_id = region)) +
scale_fill_viridis(option = "D", direction = -1) +
theme_void()
ggplot(data = min_wage_2020_map, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = Effective.Minimum.Wage, map_id = region)) +
scale_fill_viridis(option = "D") +
theme_void()
?scale_fill_viridis
ggplot(data = min_wage_2020_map, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = Effective.Minimum.Wage, map_id = region)) +
scale_fill_viridis(option = "A") +
theme_void()
ggplot(data = min_wage_2020_map, aes(x = long, y = lat)) +
geom_map(map = us_map, aes(fill = Effective.Minimum.Wage, map_id = region)) +
scale_fill_viridis(option = "C") +
theme_void()
View(min_wage_2020)
?ggplot
ggplot(data = min_wage_2020, aes(x = region, y = State.Minimum.Wage.2020.Dollars)) +
geom_bar()
ggplot(data = min_wage_2020, aes(x = region, y = State.Minimum.Wage.2020.Dollars)) +
geom_bar(stat = State.Minimum.Wage.2020.Dollars)
ggplot(data = min_wage_2020) +
geom_bar(mapping = aes(x = region, y = State.Minimum.Wage.2020.Dollars))
ggplot(min_wage_2020, aes(x = region, y = State.Minimum.Wage.2020.Dollars)) +
geom_bar(stat = "identity")
ggplot(data = min_wage) +
geom_smooth(mapping = aes(x = Year, y = State.Minimum.Wage.2020.Dollars))
View(min_wage)
